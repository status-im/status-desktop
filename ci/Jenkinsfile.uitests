library 'status-jenkins-lib@v1.5.1'

pipeline {
  agent { label 'linux' }

  parameters {
    booleanParam(
      name: 'RELEASE',
      description: 'Decides whether binaries are built with debug symbols.',
      defaultValue: params.RELEASE ?: false
    )
    choice(
      name: 'VERBOSE',
      description: 'Level of verbosity based on nimbus-build-system setup.',
      choices: ['0', '1', '2']
    )
  }

// docker run -p 8545:8545 --name ganache-cli --rm -d trufflesuite/ganache-cli:latest --database.dbPath ~/dev/test-ganache  -e 10 - -m "pelican chief sudden oval media rare swamp elephant lawsuit wheat knife initial"
// ganache --database.dbPath="/home/jonathan/dev/test-ganache" -e 10 -m "pelican chief sudden oval media rare swamp elephant lawsuit wheat knife initial" -f "https://mainnet.infura.io/v3/3d880888a170473d92f0d95e82c8b342" --chain.chainId 1
// ganache --database.dbPath="/home/jonathan/dev/test-ganache" -e 10 -m "pelican chief sudden oval media rare swamp elephant lawsuit wheat knife initial" --chain.chainId 3
// ganache --database.dbPath="/home/jonathan/dev/test-ganache-goerli" -e 10 -m "pelican chief sudden oval media rare swamp elephant lawsuit wheat knife initial" --chain.chainId 5 -p 8546
// ganache --database.dbPath="/home/jonathan/dev/status-desktop/test/ui-test/fixtures/ganache-dbs/goerli" -e 10 -m "pelican chief sudden oval media rare swamp elephant lawsuit wheat knife initial" --chain.chainId 5 -p 8546

// docker run -p 8546:8546 --name ganache-goerli -v /home/jonathan/dev/test-ganache-goerli-test/:/goerli-db --rm  trufflesuite/ganache:latest -e 10 -m "pelican chief sudden oval media rare swamp elephant lawsuit wheat knife initial" -p 8546 --chain.chainId 5 --database.dbPath /goerli-db
  
  
  options {
    timestamps()
    /* Prevent Jenkins jobs from running forever */
    timeout(time: 60, unit: 'MINUTES')
    /* manage how many builds we keep */
    buildDiscarder(logRotator(
      numToKeepStr: '10',
      daysToKeepStr: '30',
      artifactNumToKeepStr: '3',
    ))
    /* Throttle number of concurrent builds. */
    throttleJobProperty(
      throttleEnabled: true,
      throttleOption: 'category',
      categories: ['status-desktop-e2e-tests'],
      maxConcurrentPerNode: 1,
      maxConcurrentTotal: 1
    )
  }

  environment {
    TARGET = 'e2e'
    /* Improve make performance */
    MAKEFLAGS = "-j4 V=${params.VERBOSE}"
    /* Disable colors in Nim compiler logs */
    NIMFLAGS = '--colors:off'
    /* Makefile assumes the compiler folder is included */
    QTDIR = "/opt/qt/5.14.2/gcc_64"
    /* Control output the filename */
    STATUS_CLIENT_APPIMAGE = "pkg/${utils.pkgFilename(ext: 'AppImage')}"
    STATUS_CLIENT_TARBALL = "pkg/${utils.pkgFilename(ext: 'tar.gz')}"
    /* Include library in order to compile the project */
    LD_LIBRARY_PATH = "$QTDIR/lib:$WORKSPACE/vendor/status-go/build/bin:$WORKSPACE/vendor/status-keycard-go/build/libkeycard/"
    INFURA_TOKEN = "cd313fedd0dd4699b194d72b5184be06"
  }

  stages {
    stage('Deps') {
      steps {
        /* trigger fetching of git submodules */
        sh 'make check-pkg-target-linux'
        /* TODO: Re-add caching of Nim compiler. */
        sh 'make deps'
      }
    }

    stage('status-go') {
      steps { sh 'make status-go' }
    }

    stage('build') {
      steps { sh 'make' }

    }

// docker run -p 8546:8546 --name ganache-goerli -v /home/jonathan/dev/test-ganache-goerli-test/:/goerli-db --rm  trufflesuite/ganache:v7.4.1 -e 10 -m "pelican chief sudden oval media rare swamp elephant lawsuit wheat knife initial" -p 8546 --chain.chainId 5 --database.dbPath /goerli-db

//  docker.image('trufflesuite/ganache:v7.4.1').withRun(
//             "-p ${goerli_rpc_port}:${goerli_rpc_port} -v ${env.WORKSPACE}/test/ui-test/fixtures/ganache-dbs/goerli/:/goerli-db",
//             "-e 10 -m=\\'pelican chief sudden oval media rare swamp elephant lawsuit wheat knife initial\\' -p ${goerli_rpc_port} --chain.chainId 5 --database.dbPath /goerli-db"
//           ) { c ->


    stage('Tests') {
      steps {
       script {
          def goerli_rpc_port = 8577
          // def goerli_rpc_port = 855 + env.EXECUTOR_NUMBER
          docker.image('trufflesuite/ganache:v7.4.1').withRun(
            "-p 127.0.0.1:8577:8545",
            "-e 10 -m=\\'pelican chief sudden oval media rare swamp elephant lawsuit wheat knife initial\\' --chain.chainId 5"
          ) { c ->
            sh "docker ps"
            sh "curl -X POST --insecure -H \"Content-Type: application/json\" --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[], \"id\":64}' http://127.0.0.1:8577"

            withEnv(["GOERLI_NETWORK_RPC_URL_BKP=http://0.0.0.0:${goerli_rpc_port}"]){
              wrap([
                $class: 'Xvfb',
                autoDisplayName: true,
                parallelBuild: true,
                screen: '2560x1440x24',
              ]) {
                script {
                  def res = squish([
                    extraOptions: '''
                      --retry
                      2

                      --tags
                      onlythis
                      
                      --config
                      addAUT
                      nim_status_client
                      ${WORKSPACE}/bin
                    ''',
                    squishPackageName: 'squish-6.7.2-qt514x-linux64',
                    testSuite: '${WORKSPACE}/test/ui-test/testSuites/*',
                  ])
                  if ( res != "SUCCESS" ) {
                    throw new Exception("squish test didn't end with success")
                  }
                }
              }
            }
          }
        }
      }
    }

    stage('Logs docker') {
      steps {
        sh 'docker logs ganache-goerli2'
      }
    }
  }

  post {
    success { script { github.notifyPR(true) } }
    failure { script { github.notifyPR(false) } }
    always { cleanWs() }
  }
}
